exp(nzvaccin.gfit$coef["Week"])
exp(confint(nzvaccin.gfit))
nzvaccin.gfit2 = glm(Vaccinations ~ Week * Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit2, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
summary(nzvaccin.gfit2)
1 - pchisq(43773, 39)
exp(confint(nzvaccin.gfit2))
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
## First create a vector of x's from 1 to 15. This command
## generate 100 values in this range.
xx = seq(1, 15, length.out = 100)
## Generate predicted values for YOUR chosen fitted model by editing the
## name "fit"" in the following code
expected.Auckland = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Auckland"),type="response")
expected.Wellington = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Wellington"),type="response")
expected.Canterbury = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Canterbury"),type="response")
## add the line to the model
lines(xx,expected.Auckland,col = "black")
lines(xx,expected.Wellington,col = "blue")
lines(xx,expected.Canterbury,col = "green")
Defects.df=read.table("Defects.txt",header=T,stringsAsFactors = TRUE)
stripchart(Defects/BatchSize~Environment,pch=1,method="stack",main="Plot of Proportions of Defects by Environment",data=Defects.df)
Defects.glm = glm(Environment ~ Defects/BatchSize, family = quasibinomial, data=Defects.df)
plot(Defects.glm, which = 1)
summary(Defects.glm)
1 - pchisq(27.956, 27)
exp(confint(Defects.glm))
#Defects.glm2 = glm(Environment ~ Defects, family = quasibinomial, data=Defects.df)
Defects.glm2 = glm(Defects/BatchSize ~ Environment, weight=n, family = binomial, data=Defects.df)
knitr::opts_chunk$set(fig.height=3)
## Do not delete this!
## It loads the s20x library for you. If you delete it
## your document may not compile
library(s20x)
library(s20x)
nzvaccines.df <- read.table("NZVaccines.txt",header = TRUE,stringsAsFactors = TRUE)
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Auckland", ],col = "black")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Wellington", ],col = "blue")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Canterbury", ],col = "green")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
nzvaccin.gfit = glm(Vaccinations ~ Week + Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
anova(nzvaccin.gfit, test = 'Chisq')
summary(nzvaccin.gfit)
1 - pchisq(44443, 41)
exp(nzvaccin.gfit$coef["Week"])
exp(confint(nzvaccin.gfit))
nzvaccin.gfit2 = glm(Vaccinations ~ Week * Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit2, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
summary(nzvaccin.gfit2)
1 - pchisq(43773, 39)
exp(confint(nzvaccin.gfit2))
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
## First create a vector of x's from 1 to 15. This command
## generate 100 values in this range.
xx = seq(1, 15, length.out = 100)
## Generate predicted values for YOUR chosen fitted model by editing the
## name "fit"" in the following code
expected.Auckland = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Auckland"),type="response")
expected.Wellington = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Wellington"),type="response")
expected.Canterbury = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Canterbury"),type="response")
## add the line to the model
lines(xx,expected.Auckland,col = "black")
lines(xx,expected.Wellington,col = "blue")
lines(xx,expected.Canterbury,col = "green")
Defects.df=read.table("Defects.txt",header=T,stringsAsFactors = TRUE)
stripchart(Defects/BatchSize~Environment,pch=1,method="stack",main="Plot of Proportions of Defects by Environment",data=Defects.df)
Defects.glm = glm(Environment ~ Defects/BatchSize, family = quasibinomial, data=Defects.df)
plot(Defects.glm, which = 1)
summary(Defects.glm)
1 - pchisq(27.956, 27)
exp(confint(Defects.glm))
#Defects.glm2 = glm(Environment ~ Defects, family = quasibinomial, data=Defects.df)
Defects.glm2 = glm(Defects/BatchSize ~ Environment, family = binomial, data=Defects.df)
plot(Defects.glm2, which = 1, lty = 2)
summary(Defects.glm2)
1-pchisq(32.872 , 28)
exp(confint(Defects.glm2))
knitr::opts_chunk$set(fig.height=3)
## Do not delete this!
## It loads the s20x library for you. If you delete it
## your document may not compile
library(s20x)
library(s20x)
nzvaccines.df <- read.table("NZVaccines.txt",header = TRUE,stringsAsFactors = TRUE)
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Auckland", ],col = "black")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Wellington", ],col = "blue")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Canterbury", ],col = "green")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
nzvaccin.gfit = glm(Vaccinations ~ Week + Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
anova(nzvaccin.gfit, test = 'Chisq')
summary(nzvaccin.gfit)
1 - pchisq(44443, 41)
exp(nzvaccin.gfit$coef["Week"])
exp(confint(nzvaccin.gfit))
nzvaccin.gfit2 = glm(Vaccinations ~ Week * Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit2, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
summary(nzvaccin.gfit2)
1 - pchisq(43773, 39)
exp(confint(nzvaccin.gfit2))
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
## First create a vector of x's from 1 to 15. This command
## generate 100 values in this range.
xx = seq(1, 15, length.out = 100)
## Generate predicted values for YOUR chosen fitted model by editing the
## name "fit"" in the following code
expected.Auckland = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Auckland"),type="response")
expected.Wellington = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Wellington"),type="response")
expected.Canterbury = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Canterbury"),type="response")
## add the line to the model
lines(xx,expected.Auckland,col = "black")
lines(xx,expected.Wellington,col = "blue")
lines(xx,expected.Canterbury,col = "green")
Defects.df=read.table("Defects.txt",header=T,stringsAsFactors = TRUE)
stripchart(Defects/BatchSize~Environment,pch=1,method="stack",main="Plot of Proportions of Defects by Environment",data=Defects.df)
Defects.glm = glm(Environment ~ Defects/BatchSize, family = quasibinomial, data=Defects.df)
plot(Defects.glm, which = 1)
summary(Defects.glm)
1 - pchisq(27.956, 27)
exp(confint(Defects.glm))
#Defects.glm2 = glm(Environment ~ Defects, family = quasibinomial, data=Defects.df)
Defects.glm2 = glm(Defects/BatchSize ~ Environment, weight = BatchSize, family = binomial, data=Defects.df)
plot(Defects.glm2, which = 1, lty = 2)
summary(Defects.glm2)
1-pchisq(32.872 , 28)
exp(confint(Defects.glm2))
knitr::opts_chunk$set(fig.height=3)
## Do not delete this!
## It loads the s20x library for you. If you delete it
## your document may not compile
library(s20x)
library(s20x)
nzvaccines.df <- read.table("NZVaccines.txt",header = TRUE,stringsAsFactors = TRUE)
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Auckland", ],col = "black")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Wellington", ],col = "blue")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Canterbury", ],col = "green")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
nzvaccin.gfit = glm(Vaccinations ~ Week + Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
anova(nzvaccin.gfit, test = 'Chisq')
summary(nzvaccin.gfit)
1 - pchisq(44443, 41)
exp(nzvaccin.gfit$coef["Week"])
exp(confint(nzvaccin.gfit))
nzvaccin.gfit2 = glm(Vaccinations ~ Week * Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit2, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
summary(nzvaccin.gfit2)
1 - pchisq(43773, 39)
exp(confint(nzvaccin.gfit2))
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
## First create a vector of x's from 1 to 15. This command
## generate 100 values in this range.
xx = seq(1, 15, length.out = 100)
## Generate predicted values for YOUR chosen fitted model by editing the
## name "fit"" in the following code
expected.Auckland = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Auckland"),type="response")
expected.Wellington = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Wellington"),type="response")
expected.Canterbury = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Canterbury"),type="response")
## add the line to the model
lines(xx,expected.Auckland,col = "black")
lines(xx,expected.Wellington,col = "blue")
lines(xx,expected.Canterbury,col = "green")
Defects.df=read.table("Defects.txt",header=T,stringsAsFactors = TRUE)
stripchart(Defects/BatchSize~Environment,pch=1,method="stack",main="Plot of Proportions of Defects by Environment",data=Defects.df)
knitr::opts_chunk$set(fig.height=3)
## Do not delete this!
## It loads the s20x library for you. If you delete it
## your document may not compile
library(s20x)
library(s20x)
nzvaccines.df <- read.table("NZVaccines.txt",header = TRUE,stringsAsFactors = TRUE)
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Auckland", ],col = "black")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Wellington", ],col = "blue")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Canterbury", ],col = "green")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
nzvaccin.gfit = glm(Vaccinations ~ Week + Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
anova(nzvaccin.gfit, test = 'Chisq')
summary(nzvaccin.gfit)
1 - pchisq(44443, 41)
exp(nzvaccin.gfit$coef["Week"])
exp(confint(nzvaccin.gfit))
nzvaccin.gfit2 = glm(Vaccinations ~ Week * Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit2, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
summary(nzvaccin.gfit2)
1 - pchisq(43773, 39)
exp(confint(nzvaccin.gfit2))
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
## First create a vector of x's from 1 to 15. This command
## generate 100 values in this range.
xx = seq(1, 15, length.out = 100)
## Generate predicted values for YOUR chosen fitted model by editing the
## name "fit"" in the following code
expected.Auckland = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Auckland"),type="response")
expected.Wellington = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Wellington"),type="response")
expected.Canterbury = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Canterbury"),type="response")
## add the line to the model
lines(xx,expected.Auckland,col = "black")
lines(xx,expected.Wellington,col = "blue")
lines(xx,expected.Canterbury,col = "green")
Defects.df=read.table("Defects.txt",header=T,stringsAsFactors = TRUE)
stripchart(Defects/BatchSize~Environment,pch=1,method="stack",main="Plot of Proportions of Defects by Environment",data=Defects.df)
Defects.glm = glm(Environment ~ Defects/BatchSize, family = quasibinomial, data=Defects.df)
plot(Defects.glm, which = 1)
summary(Defects.glm)
1 - pchisq(27.956, 27)
exp(confint(Defects.glm))
#Defects.glm2 = glm(Environment ~ Defects, family = quasibinomial, data=Defects.df)
Defects.glm2 = glm(Defects/BatchSize ~ Environment, weight = BatchSize, family = binomial, data=Defects.df)
plot(Defects.glm2, which = 1, lty = 2)
summary(Defects.glm2)
1-pchisq(47.409 , 27)
exp(confint(Defects.glm2))
#predicData = data.frame(Defects = c(0,10,18))
#predictGLM(Defects.glm2, newdata = predicData, type = "response")
predictGLM(Defects.glm2, newdata = data.frame(Environment=c("Ambient", "Filtered", "Purified")), type = "response")
knitr::opts_chunk$set(fig.height=3)
## Do not delete this!
## It loads the s20x library for you. If you delete it
## your document may not compile
library(s20x)
library(s20x)
nzvaccines.df <- read.table("NZVaccines.txt",header = TRUE,stringsAsFactors = TRUE)
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Auckland", ],col = "black")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Wellington", ],col = "blue")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Canterbury", ],col = "green")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
nzvaccin.gfit = glm(Vaccinations ~ Week + Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
anova(nzvaccin.gfit, test = 'Chisq')
summary(nzvaccin.gfit)
1 - pchisq(44443, 41)
exp(nzvaccin.gfit$coef["Week"])
exp(confint(nzvaccin.gfit))
nzvaccin.gfit2 = glm(Vaccinations ~ Week * Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit2, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
summary(nzvaccin.gfit2)
1 - pchisq(43773, 39)
exp(confint(nzvaccin.gfit2))
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
## First create a vector of x's from 1 to 15. This command
## generate 100 values in this range.
xx = seq(1, 15, length.out = 100)
## Generate predicted values for YOUR chosen fitted model by editing the
## name "fit"" in the following code
expected.Auckland = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Auckland"),type="response")
expected.Wellington = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Wellington"),type="response")
expected.Canterbury = predict(nzvaccin.gfit,newdata=data.frame(Week=xx,Region="Canterbury"),type="response")
## add the line to the model
lines(xx,expected.Auckland,col = "black")
lines(xx,expected.Wellington,col = "blue")
lines(xx,expected.Canterbury,col = "green")
Defects.df=read.table("Defects.txt",header=T,stringsAsFactors = TRUE)
stripchart(Defects/BatchSize~Environment,pch=1,method="stack",main="Plot of Proportions of Defects by Environment",data=Defects.df)
Defects.glm = glm(Defects/BatchSize ~ Environment, weight = BatchSize, family = binomial, data=Defects.df)
plot(Defects.glm, which = 1, lty = 2)
summary(Defects.glm)
1-pchisq(47.409 , 27)
exp(confint(Defects.glm))
predictGLM(Defects.glm, newdata = data.frame(Environment=c("Ambient", "Filtered", "Purified")), type = "response")
Defects.glm = glm(Defects/BatchSize ~ Environment, weight = BatchSize, family = binomial, data=Defects.df)
plot(Defects.glm, which = 1, lty = 2)
summary(Defects.glm)
1-pchisq(47.409 , 27)
exp(confint(Defects.glm))
Defects.df
knitr::opts_chunk$set(fig.height=3)
## Do not delete this!
## It loads the s20x library for you. If you delete it
## your document may not compile
library(s20x)
library(s20x)
nzvaccines.df <- read.table("NZVaccines.txt",header = TRUE,stringsAsFactors = TRUE)
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Auckland", ],col = "black")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Wellington", ],col = "blue")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Canterbury", ],col = "green")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
nzvaccin.gfit = glm(Vaccinations ~ Week + Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
anova(nzvaccin.gfit, test = 'Chisq')
summary(nzvaccin.gfit)
1 - pchisq(44443, 41)
exp(nzvaccin.gfit$coef["Week"])
exp(confint(nzvaccin.gfit))
nzvaccin.gfit2 = glm(Vaccinations ~ Week * Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit2, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
summary(nzvaccin.gfit2)
1 - pchisq(43773, 39)
exp(confint(nzvaccin.gfit2))
knitr::opts_chunk$set(fig.height=3)
## Do not delete this!
## It loads the s20x library for you. If you delete it
## your document may not compile
library(s20x)
library(s20x)
nzvaccines.df <- read.table("NZVaccines.txt",header = TRUE,stringsAsFactors = TRUE)
plot(Vaccinations ~ Week, data = nzvaccines.df,pch = 16, cex = 0.75,
col = ifelse(Region == "Auckland", "black", ifelse(Region == "Wellington", "blue", "green")),
main="Weekly Vaccination Totals by Region")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Auckland", ],col = "black")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Wellington", ],col = "blue")
lines(Vaccinations ~ Week,data = nzvaccines.df[nzvaccines.df$Region == "Canterbury", ],col = "green")
legend("topleft", pch = 16, col = c("black", "blue", "green"), lty = 1
, c("Auckland", "Wellington", "Canterbury"))
nzvaccin.gfit = glm(Vaccinations ~ Week + Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
anova(nzvaccin.gfit, test = 'Chisq')
summary(nzvaccin.gfit)
1 - pchisq(44443, 41)
exp(nzvaccin.gfit$coef["Week"])
exp(confint(nzvaccin.gfit))
nzvaccin.gfit2 = glm(Vaccinations ~ Week * Region, family = quasipoisson, data = nzvaccines.df)
plot(nzvaccin.gfit2, which = 1, pch = substr(nzvaccines.df$Region, 1, 1))
summary(nzvaccin.gfit2)
1 - pchisq(43773, 39)
exp(confint(nzvaccin.gfit2))
1-pchisq(228.56,18)
## Do not delete this!
## It loads the s20x library for you. If you delete it
## your document may not compile it.
require(s20x)
Quakes.df = read.table("EarthquakeMagnitudes.txt", header = TRUE)
head(Quakes.df)
plot(Freq ~ Magnitude, data = Quakes.df, pch = substr(Locn, 1, 1))
plot(log(Freq) ~ Magnitude, data = Quakes.df, pch = substr(Locn, 1, 1))
Quake.gfit = glm(Freq ~ Locn * Magnitude, family = poisson, data = Quakes.df)
plot(Quake.gfit, which = 1, pch = substr(Quakes.df$Locn, 1, 1))
summary(Quake.gfit)
1 - pchisq(17.98, 18)
exp(confint(Quake.gfit)[3, ]) # Multiplicative annual change in CA
100 * (1 - exp(confint(Quake.gfit)[3, ])) # Percentage annual decrease in CA
![](path or URL for image
goes here)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(tidyverse)
library(magick)
install.packages("magick")
csv_file <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS0hFENLiFRQcx28R6xOu_YQdu_W9OWFJhsYQBv-q3A0n03mE3c5okw7FNxikzuQGHK11O715J7uOa1/pub?gid=0&single=true&output=csv"
spotify_data <- read_csv(csv_file)
knitr::opts_chunk$set(echo = TRUE)
csv_file <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS0hFENLiFRQcx28R6xOu_YQdu_W9OWFJhsYQBv-q3A0n03mE3c5okw7FNxikzuQGHK11O715J7uOa1/pub?gid=0&single=true&output=csv"
spotify_data <- read_csv(csv_file)
install.packages(tidyverse)
library(tidyverse)
csv_file <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS0hFENLiFRQcx28R6xOu_YQdu_W9OWFJhsYQBv-q3A0n03mE3c5okw7FNxikzuQGHK11O715J7uOa1/pub?gid=0&single=true&output=csv"
spotify_data <- read_csv(csv_file)
csv_file <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS0hFENLiFRQcx28R6xOu_YQdu_W9OWFJhsYQBv-q3A0n03mE3c5okw7FNxikzuQGHK11O715J7uOa1/pub?gid=0&single=true&output=csv"
spotify_data <- read_csv(csv_file)
csv_file <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS0hFENLiFRQcx28R6xOu_YQdu_W9OWFJhsYQBv-q3A0n03mE3c5okw7FNxikzuQGHK11O715J7uOa1/pub?gid=0&single=true&output=csv"
spotify_data <- read_csv(csv_file) %>%
print()
csv_file <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS0hFENLiFRQcx28R6xOu_YQdu_W9OWFJhsYQBv-q3A0n03mE3c5okw7FNxikzuQGHK11O715J7uOa1/pub?gid=0&single=true&output=csv"
spotify_data <- read_csv(csv_file) %>%
spotify_data %>%
rename(track_name = 8) %>%
select(track_name, danceability) %>%
slice(1 : 5) %>%
print()
csv_file <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS0hFENLiFRQcx28R6xOu_YQdu_W9OWFJhsYQBv-q3A0n03mE3c5okw7FNxikzuQGHK11O715J7uOa1/pub?gid=0&single=true&output=csv"
spotify_data <- read_csv(csv_file)
spotify_data %>%
rename(track_name = 8) %>%
select(track_name, danceability) %>%
slice(1 : 5) %>%
print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv") %>%
print()
csv_file <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS0hFENLiFRQcx28R6xOu_YQdu_W9OWFJhsYQBv-q3A0n03mE3c5okw7FNxikzuQGHK11O715J7uOa1/pub?gid=0&single=true&output=csv"
csv_file <- "https://docs.google.com/spreadsheets/d/e/2PACX-1vS0hFENLiFRQcx28R6xOu_YQdu_W9OWFJhsYQBv-q3A0n03mE3c5okw7FNxikzuQGHK11O715J7uOa1/pub?gid=0&single=true&output=csv" %>% print()
spotify_data <- read_csv(csv_file) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=710632460&single=true&output=csv") %>%
print()
length(song_data)
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv") %>%
print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=710632460&single=true&output=csv") %>%
print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=39175924&single=true&output=csv") %>%
print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv")
song_data[10:12]
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
song_data[10:12]
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
song_data(10:12)
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
slice(10:12)
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
slice(10:12) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
slice(10:20) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
slice(12:20) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
slice(12:22) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
slice(10:20) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=311993019&single=true&output=csv") %>%
slice(10:20) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=1057787459&single=true&output=csv") %>%
slice(10:20) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=1057787459&single=true&output=csv") %>%
select(track_name,key_name) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv") %>%
select(track_name,key_name) %>% print()
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv")
song_data %>%
ggplot() %>%
geom_bar(aes(x = energy))
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(x = energy))
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(x = key_name, fill = "#aecdd2")
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(x = key_name), fill = "#aecdd2")
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=1362162571&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(x = energy))
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=1362162571&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(y = energy))
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(x = track_id, fill = key_name))
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(x = key_name, fill = track_id))
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=599797011&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(x = track_id, fill = key_name))
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=997193167&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(x = tempo)) +
labs(title = "STATS 220 is awesome")
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=997193167&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(x = tempo)) +
labs(title = STATS 220 is awesome)
song_data <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vQjF1Hf5KQ9--IboWbmaXJ14tknXsXUcfTlqZM4CVI3OiSnG_w6BxQcD5EJ4lvF5UeVXXLPmWyckJQ2/pub?gid=997193167&single=true&output=csv")
song_data %>%
ggplot() +
geom_bar(aes(x = tempo)) +
labs(title = "STATS 220 is awesome")
